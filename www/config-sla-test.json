{
	"database_server": {
		"host": "localhost",
		"port": 27017
	},
	"redis_input": {
		"host": "localhost",
		"port": 6379
	},
	"kafka_input": {
		"host": "127.0.0.1",
		"port": 9092,
		"_ssl.ca.location": "data/kafka-ca.cert",
		"topic": "mi-reports",
		"client_name": "mmt-operator-kafka-client"
	},
	"file_input": {
		"_data_folder": "/tmp/ramdisk/",
		"data_folder": "/opt/mmt/probe/result/report/online/",
		"delete_data": true,
		"nb_readers": 16
	},
	"input_mode": "kafka",
	"probe_analysis_mode": "offline",
	"local_network": [
		{
			"ip": "192.168.0.0",
			"mask": "255.255.0.0"
		},
		{
			"ip": "172.16.0.0",
			"mask": "255.240.0.0"
		},
		{
			"ip": "10.0.0.0",
			"mask": "255.0.0.0"
		},
		{
			"ip": "fe80::",
			"mask": "8"
		},
		{
			"ip": "0.0.0.0",
			"mask": "255.255.255.255"
		},
		{
			"ip": "255.255.255.255",
			"mask": "255.255.255.255"
		},
		{
			"ip": "127.0.0.1",
			"mask": "255.255.255.255"
		}
	],
	"probe_stats_period": 5,
	"buffer": {
		"max_length_size": 50000,
		"max_interval": 31
	},
	"micro_flow": {
		"packet": 1,
		"byte": 64
	},
	"retain_detail_report_period": 300,
	"port_number": 8082,
	"log_folder": "/tmp/",
	"is_in_debug_mode": true,
	"_log": [
		"error",
		"warn",
		"log",
		"info"
	],
	"log": [
		"error",
		"warn",
		"log",
		"info"
	],
	"_modules": [
		"security",
		"behavior",
		"ndn",
		"video",
		"sla",
		"stat"
	],
	"modules": [
		"link",
		"network",
		"stat",
		"security",
		"sla",
		"enforcement"
	],
	"test":123,
	"modules_config": {
		"sla": {
			"active_check_period": 5,
			"violation_check_period": 60,
			"reaction_check_period": 5,
			"init_components": [
				  {
					"id": "1",
					"ip": "192.168.1.1",
					"metrics": [],
					"title": "INFLUENCE5G"
				}
			],
			"init_metrics": [
			],
			"actions": {
				"reroute_packets": {
					"description": "Packets need to be rerouted",
					"channel_name": "reroute_packets",
					"agent_description": "This agent allows to reroute packets",
					"candidate_metrics": {
						"dlTput.maxDlTputPerSlice": {
							"violate": true
						},
						"ulTput.maxUlTputPerSlice": {
							"violate": true
						},
						"latency.maxE2ELatency": {
							"violate": true
						},
						"latency.lowJitter": {
							"violate": true
						}
					}
				},
				"priority_scheduling": {
					"description": "Working mode needs to be made adaptive (i.e., serve packets in priority order)",
					"channel_name": "priority_scheduling",
					"agent_description": "This agent allows to serve packets based on priority scheduling",
					"candidate_metrics": {
						"dlTput.maxDlTputPerSlice": {
							"violate": true
						},
						"ulTput.maxUlTputPerSlice": {
							"violate": true
						},
						"latency.maxE2ELatency": {
							"violate": true
						},
						"latency.lowJitter": {
							"violate": true
						}
					}
				},
				"distribute_resource_per_flow": {
					"description": "Distribute resources equally per flow (rather than per packet)",
					"channel_name": "distribute_resource_per_flow",
					"agent_description": "This agent allows to make distribute resources equally per flow",
					"candidate_metrics": {
						"dlTput.maxDlTputPerSlice": {
							"violate": true
						},
						"ulTput.maxUlTputPerSlice": {
							"violate": true
						},
						"latency.maxE2ELatency": {
							"violate": true
						},
						"latency.lowJitter": {
							"violate": true
						}
					}
				},
				"reset_devices": {
					"description": "Reset the compromised IoT devices to its factory state",
					"channel_name": "reset_devices",
					"agent_description": "This agent sends a reset command to the compromised IoT devices",
					"candidate_metrics": {
						"dlTput.maxTputVariation": {
							"violate": true
						},
						"ulTput.maxTputVariation": {
							"violate": true
						},
						"latency.lowJitter": {
							"violate": true
						}
					}
				},
				"isolate_devices": {
					"description": "Isolate the compromised IoT devices from network slice",
					"channel_name": "isolate_devices",
					"agent_description": "This agent isolates the compromised IoT devices",
					"candidate_metrics": {
						"dlTput.maxDlTputPerSlice": {
							"violate": true
						},
						"ulTput.maxUlTputPerSlice": {
							"violate": true
						},
						"dim.maxPDUsessions": {
							"violate": true
						},
						"dim.numberOfTerminals": {
							"violate": true
						}
					}
				}
			}
		},
		"report_forward": {
			"enable": false,
			"report_types": [
				10,
				100
			],
			"server": {
				"host": "localhost",
				"port": 8088
			},
			"keep_alive": true
		}
	}
}
