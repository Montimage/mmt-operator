// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser Angular2 Todo 1`] = `
Object {
  "app/components/app/app.component.js": Object {
    "exports": Array [
      "AppComponent",
    ],
    "imports": Object {
      "app/components/app/app.template.html": Array [
        "template",
      ],
    },
  },
  "app/components/index.js": Object {
    "exports": Array [],
    "imports": Object {
      "app/components/app/app.component.js": Array [],
      "app/components/todo-footer/todo-footer.component.js": Array [],
      "app/components/todo-header/todo-header.component.js": Array [],
      "app/components/todo-item/todo-item.component.js": Array [],
      "app/components/todo-list/todo-list.component.js": Array [],
    },
  },
  "app/components/todo-footer/todo-footer.component.js": Object {
    "exports": Array [
      "TodoFooterComponent",
    ],
    "imports": Object {
      "app/components/todo-footer/todo-footer.template.html": Array [
        "template",
      ],
      "app/services/todo-store.service.js": Array [
        "TodoStoreService",
      ],
    },
  },
  "app/components/todo-header/todo-header.component.js": Object {
    "exports": Array [
      "TodoHeaderComponent",
    ],
    "imports": Object {
      "app/components/todo-header/todo-header.template.html": Array [
        "template",
      ],
      "app/services/todo-store.service.js": Array [
        "TodoStoreService",
      ],
    },
  },
  "app/components/todo-item/todo-item.component.js": Object {
    "exports": Array [
      "TodoItemComponent",
    ],
    "imports": Object {
      "app/components/todo-item/todo-item.template.html": Array [
        "template",
      ],
    },
  },
  "app/components/todo-list/todo-list.component.js": Object {
    "exports": Array [
      "TodoListComponent",
    ],
    "imports": Object {
      "app/components/todo-list/todo-list.template.html": Array [
        "template",
      ],
      "app/services/todo-store.service.js": Array [
        "TodoStoreService",
      ],
    },
  },
  "app/main.js": Object {
    "exports": Array [],
    "imports": Object {
      "app/main.module.js": Array [
        "MainModule",
      ],
      "node_modules/rxjs/index.js": Array [],
    },
  },
  "app/main.module.js": Object {
    "exports": Array [
      "MainModule",
    ],
    "imports": Object {
      "app/components/index.js": Array [
        "AppComponent",
        "TodoListComponent",
        "TodoFooterComponent",
        "TodoHeaderComponent",
        "TodoItemComponent",
      ],
      "app/pipes/index.js": Array [
        "TrimPipe",
      ],
      "app/routes.js": Array [
        "routes",
      ],
      "app/services/todo-store.service.js": Array [
        "TodoStoreService",
      ],
    },
  },
  "app/models/todo.model.js": Object {
    "exports": Array [
      "TodoModel",
    ],
    "imports": Object {},
  },
  "app/pipes/index.js": Object {
    "exports": Array [],
    "imports": Object {
      "app/pipes/trim/trim.pipe.js": Array [],
    },
  },
  "app/pipes/trim/trim.pipe.js": Object {
    "exports": Array [
      "TrimPipe",
    ],
    "imports": Object {},
  },
  "app/routes.js": Object {
    "exports": Array [
      "routes",
    ],
    "imports": Object {
      "app/components/todo-list/todo-list.component.js": Array [
        "TodoListComponent",
      ],
    },
  },
  "app/services/todo-store.service.js": Object {
    "exports": Array [
      "TodoStoreService",
    ],
    "imports": Object {
      "app/models/todo.model.js": Array [
        "TodoModel",
      ],
    },
  },
  "main.bundle.js": Object {
    "exports": Array [],
    "imports": Object {},
  },
  "webpack.config.js": Object {
    "exports": Array [],
    "imports": Object {},
  },
}
`;

exports[`Parser Arkit 1`] = `
Object {
  "arkit.ts": Object {
    "exports": Array [
      "getConfig",
      "getOutputs",
      "arkit",
    ],
    "imports": Object {
      "cli.ts": Array [
        "cli",
      ],
      "config.ts": Array [
        "Config",
      ],
      "converter.ts": Array [
        "Converter",
      ],
      "generator.ts": Array [
        "Generator",
      ],
      "node_modules/progress/index.js": Array [
        "ProgressBar",
      ],
      "parser.ts": Array [
        "Parser",
      ],
      "puml.ts": Array [
        "PUML",
      ],
      "types.ts": Array [
        "Options",
        "OutputFormat",
        "OutputSchema",
        "SavedString",
      ],
      "utils.ts": Array [
        "array",
        "convertToRelative",
        "getAbsolute",
        "info",
        "trace",
      ],
    },
  },
  "cli.ts": Object {
    "exports": Array [
      "cli",
    ],
    "imports": Object {
      "node_modules/yargs/index.js": Array [
        "yargs",
      ],
    },
  },
  "config.ts": Object {
    "exports": Array [
      "Config",
    ],
    "imports": Object {
      "path": Array [
        "path",
      ],
      "types.ts": Array [
        "ComponentNameFormat",
        "ComponentSchema",
        "ConfigBase",
        "ConfigSchema",
        "GroupSchema",
        "Options",
        "OutputSchema",
      ],
      "utils.ts": Array [
        "array",
        "debug",
        "safeRequire",
      ],
    },
  },
  "converter.ts": Object {
    "exports": Array [
      "Converter",
    ],
    "imports": Object {
      "fs": Array [
        "fs",
      ],
      "logger.ts": Array [
        "debug",
      ],
      "path": Array [
        "path",
      ],
      "types.ts": Array [
        "ConfigBase",
        "OutputFormat",
        "SavedString",
      ],
      "utils.ts": Array [
        "request",
      ],
    },
  },
  "filesystem.ts": Object {
    "exports": Array [
      "FileSystem",
    ],
    "imports": Object {
      "logger.ts": Array [
        "debug",
        "info",
        "trace",
        "warn",
      ],
      "node_modules/resolve/index.js": Array [
        "sync",
      ],
      "node_modules/ts-morph/dist/ts-morph.js": Array [
        "Project",
        "SourceFile",
      ],
      "node_modules/tsconfig-paths/lib/index.js": Array [
        "createMatchPath",
        "loadConfig",
        "MatchPath",
      ],
      "schema.ts": Array [
        "ComponentSchema",
      ],
      "types.ts": Array [
        "ConfigBase",
      ],
      "utils.ts": Array [
        "getPaths",
      ],
    },
  },
  "generator.ts": Object {
    "exports": Array [
      "Generator",
    ],
    "imports": Object {
      "path": Array [
        "path",
      ],
      "types.ts": Array [
        "ComponentFilters",
        "ComponentNameFormat",
        "ComponentSchema",
        "OutputSchema",
        "Files",
        "Component",
        "Components",
        "EMPTY_LAYER",
        "Layers",
        "ConfigBase",
      ],
      "utils.ts": Array [
        "trace",
        "warn",
        "array",
        "match",
        "verifyComponentFilters",
        "info",
      ],
    },
  },
  "logger.ts": Object {
    "exports": Array [
      "fatal",
      "error",
      "warn",
      "info",
      "debug",
      "trace",
    ],
    "imports": Object {
      "node_modules/pino/pino.js": Array [
        "pino",
      ],
    },
  },
  "parser.ts": Object {
    "exports": Array [
      "Parser",
    ],
    "imports": Object {
      "filesystem.ts": Array [
        "FileSystem",
      ],
      "node_modules/progress/index.js": Array [
        "ProgressBar",
      ],
      "node_modules/ts-morph/dist/ts-morph.js": Array [
        "ExportDeclarationStructure",
        "ImportDeclarationStructure",
        "SourceFile",
        "Statement",
        "TypeGuards",
      ],
      "os": Array [
        "EOL",
      ],
      "types.ts": Array [
        "ConfigBase",
        "Exports",
        "File",
        "Files",
        "Imports",
      ],
      "utils.ts": Array [
        "find",
        "debug",
        "info",
        "trace",
        "warn",
        "getAllStatements",
        "error",
      ],
    },
  },
  "puml.ts": Object {
    "exports": Array [
      "PUML",
    ],
    "imports": Object {
      "path": Array [
        "path",
      ],
      "schema.ts": Array [
        "OutputDirection",
        "OutputSchema",
      ],
      "types.ts": Array [
        "Component",
        "Context",
        "EMPTY_LAYER",
        "Layers",
      ],
      "utils.ts": Array [
        "bold",
        "getAllComponents",
        "trace",
      ],
    },
  },
  "schema.ts": Object {
    "exports": Array [
      "Options",
      "ConfigSchema",
      "ComponentSchema",
      "ComponentNameFormat",
      "OutputSchema",
      "GroupSchema",
      "ComponentFilters",
      "OutputDirection",
      "OutputFormat",
    ],
    "imports": Object {},
  },
  "types.ts": Object {
    "exports": Array [
      "EMPTY_LAYER",
      "Components",
      "Layers",
      "Context",
      "Component",
      "Imports",
      "Exports",
      "File",
      "Files",
      "ConfigBase",
      "SavedString",
    ],
    "imports": Object {
      "schema.ts": Array [
        "ConfigSchema",
      ],
    },
  },
  "utils.ts": Object {
    "exports": Array [
      "getStats",
      "getMemoryUsage",
      "getPaths",
      "match",
      "find",
      "safeRequire",
      "array",
      "verifyComponentFilters",
      "bold",
      "request",
      "getAllComponents",
      "getAbsolute",
      "convertToRelative",
      "getAllStatements",
    ],
    "imports": Object {
      "fs": Array [
        "fs",
      ],
      "https": Array [
        "https",
      ],
      "logger.ts": Array [
        "trace",
        "warn",
      ],
      "node_modules/nanomatch/index.js": Array [
        "nanomatch",
      ],
      "node_modules/ts-morph/dist/ts-morph.js": Array [
        "Node",
        "Statement",
        "TypeGuards",
      ],
      "path": Array [
        "path",
      ],
      "types.ts": Array [
        "Component",
        "ComponentFilters",
        "ComponentSchema",
        "Layers",
      ],
    },
  },
}
`;

exports[`Parser Express 1`] = `
Object {
  "application.js": Object {
    "exports": Array [],
    "imports": Object {
      "http": Array [],
      "middleware/init.js": Array [],
      "middleware/query.js": Array [],
      "node_modules/debug/src/index.js": Array [],
      "path": Array [
        "resolve",
      ],
      "router/index.js": Array [],
      "utils.js": Array [
        "compileETag",
        "compileQueryParser",
        "compileTrust",
      ],
      "view.js": Array [],
    },
  },
  "express.js": Object {
    "exports": Array [],
    "imports": Object {
      "application.js": Array [],
      "events": Array [
        "EventEmitter",
      ],
      "middleware/query.js": Array [],
      "request.js": Array [],
      "response.js": Array [],
      "router/index.js": Array [],
      "router/route.js": Array [],
    },
  },
  "middleware/init.js": Object {
    "exports": Array [],
    "imports": Object {},
  },
  "middleware/query.js": Object {
    "exports": Array [],
    "imports": Object {
      "node_modules/qs/lib/index.js": Array [],
    },
  },
  "request.js": Object {
    "exports": Array [],
    "imports": Object {
      "http": Array [],
      "net": Array [
        "isIP",
      ],
    },
  },
  "response.js": Object {
    "exports": Array [],
    "imports": Object {
      "http": Array [],
      "node_modules/safe-buffer/index.js": Array [
        "Buffer",
      ],
      "path": Array [],
      "utils.js": Array [
        "isAbsolute",
        "normalizeType",
        "normalizeTypes",
        "setCharset",
      ],
    },
  },
  "router/index.js": Object {
    "exports": Array [],
    "imports": Object {
      "node_modules/debug/src/index.js": Array [],
      "router/layer.js": Array [],
      "router/route.js": Array [],
    },
  },
  "router/layer.js": Object {
    "exports": Array [],
    "imports": Object {
      "node_modules/debug/src/index.js": Array [],
    },
  },
  "router/route.js": Object {
    "exports": Array [],
    "imports": Object {
      "node_modules/debug/src/index.js": Array [],
      "router/layer.js": Array [],
    },
  },
  "utils.js": Object {
    "exports": Array [],
    "imports": Object {
      "node_modules/qs/lib/index.js": Array [],
      "node_modules/safe-buffer/index.js": Array [
        "Buffer",
      ],
      "querystring": Array [],
    },
  },
  "view.js": Object {
    "exports": Array [],
    "imports": Object {
      "fs": Array [],
      "node_modules/debug/src/index.js": Array [],
      "path": Array [],
    },
  },
}
`;

exports[`Parser Sample 1`] = `
Object {
  "controllers/singleton.ts": Object {
    "exports": Array [
      "singleton",
    ],
    "imports": Object {
      "models/model.ts": Array [
        "List",
        "Model",
        "CONSTANT",
        "a",
        "b1",
        "b2",
        "b3",
        "c",
      ],
    },
  },
  "main.ts": Object {
    "exports": Array [],
    "imports": Object {
      "utils.ts": Array [
        "arrUtil",
        "objUtil",
      ],
      "views/main.view.js": Array [
        "mainView",
      ],
    },
  },
  "models/model.ts": Object {
    "exports": Array [
      "Model",
      "List",
      "CONSTANT",
      "{ a, b: [b1, b2, b3], c }",
      "Type",
    ],
    "imports": Object {},
  },
  "utils.ts": Object {
    "exports": Array [],
    "imports": Object {
      "models/model.ts": Array [
        "Type",
      ],
    },
  },
  "views/base.component.js": Object {
    "exports": Array [],
    "imports": Object {},
  },
  "views/component.js": Object {
    "exports": Array [
      "Component",
    ],
    "imports": Object {
      "views/base.component.js": Array [
        "BaseComponent",
      ],
    },
  },
  "views/main.view.js": Object {
    "exports": Array [
      "mainView",
    ],
    "imports": Object {
      "controllers/singleton.ts": Array [
        "singleton",
      ],
      "views/component.js": Array [
        "Component",
      ],
    },
  },
}
`;
